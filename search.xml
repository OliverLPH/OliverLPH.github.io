<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>PaddlePaddle编译安装1</title>
      <link href="/2019/11/01/PaddlePaddle%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%851/"/>
      <url>/2019/11/01/PaddlePaddle%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%851/</url>
      <content type="html"><![CDATA[<p>PaddlePaddle的安装在官方网站已经比较详尽了，大多数用户可参考链接进行安装（<a href="https://www.paddlepaddle.org.cn/install/quick）。" target="_blank" rel="noopener">https://www.paddlepaddle.org.cn/install/quick）。</a></p><p>PaddlePaddle目前仅支持Python语言进行训练，Python，C/C++语言进行模型推理。当前对Windows、OSX、Linux等多种操作系统进行支持。</p><p>但是快速安装的方案肯定不能满足有些用户的需求的，我这里就介绍一些编译Paddle的过程中会遇到的问题，希望能解决一些用户的困惑。</p><a id="more"></a><h2 id="PaddlePaddle源码编译"><a href="#PaddlePaddle源码编译" class="headerlink" title="PaddlePaddle源码编译"></a>PaddlePaddle源码编译</h2><p>现在PaddlePaddle支持在Windows, Ubuntu, Centos, OSX等操作系统上进行编译，具体可以参考<a href="https://www.paddlepaddle.org.cn/install/doc/source/ubuntu" target="_blank" rel="noopener">PaddlePaddle官网编译</a>里面的内容介绍。</p><blockquote><p>前置条件</p><ol><li>CMake 3.0+</li><li>GCC 4.8+</li><li>Python(64 bit) 2.7+</li><li>pip(64 bit) 9.0.1+</li><li>Git</li><li>GPU版本：CUDA 8.0+, cuDNN 7.3+</li></ol></blockquote><p>就目前来看，PaddlePaddle在Linux平台下的编译会比较顺畅一些，当然各平台的编译流程也是大同小异的。</p><h3 id="Docker容器内编译"><a href="#Docker容器内编译" class="headerlink" title="Docker容器内编译"></a>Docker容器内编译</h3><p>Docker这个软件非常的好，建议大家在docker中进行编译，因为虚拟化容器跟本地环境是隔离的，可以避免影响本地环境。<br><a href="https://docs.docker.com/install/" target="_blank" rel="noopener">Docker介绍</a><br>如果还不了解docker的朋友，建议也去简单学习一下，这个东西是真的很有用处。<br>接下来就进入正题了。</p><ol><li><p>首先是clone代码库，没有Git的朋友需要先装一下Git，或者在<a href="https://github.com/PaddlePaddle/Paddle" target="_blank" rel="noopener">PaddlePaddle-Github</a>里面下载代码的zip包也是可以的。<br>如果安装了Git，就直接clone代码库到你想要的文件夹里。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/PaddlePaddle/Paddle.git</span><br></pre></td></tr></table></figure></li><li><p>然后就可以创建编译环境了，官方提供了配置好部分环境的docker镜像<code>hub.baidubce.com/paddlepaddle/paddle:latest-dev</code><br>这个Ubuntu1604，CUDA8，cuDNN7.3的镜像，里面包含了CMake，python2.7，git等常用的软件。</p></li></ol><p>但我更常用的是Nvidia给出的简单版的镜像<br><code>nvidia/cuda:9.0-cudnn7-devel-centos7</code><br><code>nvidia/cuda:9.2-cudnn7-devel-ubuntu16.04</code><br>然后自己构造一下所需环境。</p><p>cd到刚刚下载Paddle代码的路径<br>如果没有GPU和nvidia-docker则只能使用docker<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name paddle-test -v $PWD:/paddle --network=host -w /paddle -it hub.baidubce.com/paddlepaddle/paddle:latest-dev /bin/bash</span><br></pre></td></tr></table></figure></p><p>如果有GPU和nvidia-docker则执行以下代码<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvidia-docker run --name paddle-test -v $PWD:/paddle --network=host -w /paddle -it hub.baidubce.com/paddlepaddle/paddle:latest-dev /bin/bash</span><br></pre></td></tr></table></figure></p><ol start="3"><li>然后现在就可以开始编译了</li></ol><p>首先在 paddle主路径下创建build文件夹并进入。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /paddle</span><br><span class="line">mkdir build</span><br><span class="line">cd build</span><br></pre></td></tr></table></figure><p>然后CMake里面会有一些参数，可以根据自己的需求选择。<br>具体的参数可以在<a href="https://github.com/PaddlePaddle/Paddle/blob/develop/CMakeLists.txt" target="_blank" rel="noopener">Paddle-CMakeLists</a>里查看一下。然后以下命令就可以编译出GPU，Python3.5版本的PaddlePaddle了。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cmake .. -DPY_VERSION=3.5 \</span><br><span class="line">         -DWITH_GPU=ON \</span><br><span class="line">         -DWITH_TESTING=OFF \</span><br><span class="line">         -DCMAKE_BUILD_TYPE=Release</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make -j$(nproc)</span><br><span class="line"><span class="meta">#</span> -j后面可跟数字，指定并行编译的核数</span><br></pre></td></tr></table></figure><ol start="4"><li><p>完成编译之后</p><p>编译出来的whl包就在 <code>python/dist</code>路径下。<br>执行 <code>pip install</code> 即可</p></li></ol>]]></content>
      
      <categories>
          
          <category> PaddlePaddle </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PaddlePaddle </tag>
            
            <tag> DeepLearning </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python源码编译（centos6）</title>
      <link href="/2019/10/26/python%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91/"/>
      <url>/2019/10/26/python%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91/</url>
      <content type="html"><![CDATA[<p>最近因为需要用不同gcc版本的python，所以自己手动编了下python，结果遇到一堆问题，所以也记录下自己遇到的问题，和查阅过的文章</p><a id="more"></a><h2 id="Python正常编译流程"><a href="#Python正常编译流程" class="headerlink" title="Python正常编译流程"></a>Python正常编译流程</h2><p>首先下载下 python的源代码，选择自己需要的版本即可</p><ul><li><a href="https://www.python.org/ftp/python/" target="_blank" rel="noopener">python源码下载链接</a></li></ul><p>比如我就下载了 python3.7.3<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd Python-3.7.3</span><br><span class="line">./configure --prefix=/home/python37/ # 注意configure的时候不会生产prefix的文件</span><br><span class="line">make </span><br><span class="line">make install # make install才会把python的相关文件安装到 /home/python37/路径下</span><br></pre></td></tr></table></figure></p><p>理论上如果不出错，这里的python就可以用了。可是现实也不是这么容易（苦笑</p><p>下面就是我遇到过的问题，然后对应的解决方案</p><h2 id="Python编译问题：Failed-to-build-these-modules"><a href="#Python编译问题：Failed-to-build-these-modules" class="headerlink" title="Python编译问题：Failed to build these modules:"></a>Python编译问题：Failed to build these modules:</h2><p>Python编译过程中可能会遇上以下问题，Failed to build xxx modules，虽然可能这些动态库都是存在于系统的，但是python在编译过程中并没找到</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Failed to build these modules:</span><br><span class="line">_sqlite3 _ssl _hashlib</span><br></pre></td></tr></table></figure><h3 id="方案一：yum-install"><a href="#方案一：yum-install" class="headerlink" title="方案一：yum install"></a>方案一：yum install</h3><p>如果系统中是缺少相关的库，建议直接yum install 安装一遍，网上有的人说安装完下面的lib就可以成功编译python了，但我自己是没弄成功的<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">yum -y install zlib zlib-devel </span><br><span class="line">yum -y install bzip2 bzip2-devel </span><br><span class="line">yum -y install ncurses ncurses-devel </span><br><span class="line">yum -y install readline readline-devel </span><br><span class="line">yum -y install openssl openssl-devel </span><br><span class="line">yum -y install openssl-static </span><br><span class="line">yum -y install xz lzma xz-devel </span><br><span class="line">yum -y install sqlite sqlite-devel </span><br><span class="line">yum -y install gdbm gdbm-devel </span><br><span class="line">yum -y install tk tk-devel</span><br></pre></td></tr></table></figure></p><p>如果这个不行，建议手动安装缺少的一些库，就是后面的方案二</p><h3 id="方案二：手动编译"><a href="#方案二：手动编译" class="headerlink" title="方案二：手动编译"></a>方案二：手动编译</h3><h4 id="编译sqlite3"><a href="#编译sqlite3" class="headerlink" title="编译sqlite3"></a>编译sqlite3</h4><p>这个sqlite3缺失，主要方法就是自己下载并编译，然后将其加到python的setup.py中去</p><ol><li><a href="https://www.sqlite.org/download.html" target="_blank" rel="noopener">sqlite3源码下载链接</a></li><li><a href="https://www.cnblogs.com/hunttown/p/9628773.html" target="_blank" rel="noopener">sqlite3源码编译，以及python使用</a></li></ol><h4 id="编译openssl"><a href="#编译openssl" class="headerlink" title="编译openssl"></a>编译openssl</h4><p>openssl这个很奇怪，我在我的系统中怎么查他都是存在的，但遍python的时候他就是找不到，看下stackoverflow的这个方法就可以解决了</p><ol><li><a href="https://stackoverflow.com/questions/23548188/how-do-i-compile-python-3-4-with-custom-openssl" target="_blank" rel="noopener">How do I compile Python 3.4 with custom OpenSSL?</a></li><li><a href="https://stackoverflow.com/questions/44789416/python-build-error-failed-to-build-modules-ssl-and-hashlib" target="_blank" rel="noopener">Python Build Error: failed to build modules _ssl and _hashlib</a></li><li><a href="https://chowyi.com/源码编译安装Python3及问题解决/" target="_blank" rel="noopener">源码编译安装Python3及问题解决</a></li></ol><h3 id="缺少socket"><a href="#缺少socket" class="headerlink" title="缺少socket"></a>缺少socket</h3><ol><li><a href="https://stackoverflow.com/questions/41146296/missing-socket-after-compile-python-3-6" target="_blank" rel="noopener">missing _socket after compile python 3.6</a></li></ol><h4 id="自己编译的python安装pip"><a href="#自己编译的python安装pip" class="headerlink" title="自己编译的python安装pip"></a>自己编译的python安装pip</h4><ol><li><a href="https://stackoverflow.com/questions/18363022/importerror-no-module-named-pip" target="_blank" rel="noopener">ImportError: No module named pip</a></li></ol><h2 id="可参考资料："><a href="#可参考资料：" class="headerlink" title="可参考资料："></a>可参考资料：</h2><ol><li><a href="https://www.cnblogs.com/ybdz/articles/10363109.html" target="_blank" rel="noopener">python编译安装</a></li><li><a href="https://www.cnblogs.com/shangping/p/10756718.html" target="_blank" rel="noopener">编译安装python3</a></li></ol>]]></content>
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>gtest模块使用</title>
      <link href="/2019/10/21/gtest%E6%A8%A1%E5%9D%97%E4%BD%BF%E7%94%A8/"/>
      <url>/2019/10/21/gtest%E6%A8%A1%E5%9D%97%E4%BD%BF%E7%94%A8/</url>
      <content type="html"><![CDATA[<p>gtest是Google的一个开源测试框架<br><a id="more"></a></p><h2 id="安装GTest-Linux"><a href="#安装GTest-Linux" class="headerlink" title="安装GTest (Linux)"></a>安装GTest (Linux)</h2><ol><li><p>下载源代码<br>下载gtest</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/google/googletest</span><br></pre></td></tr></table></figure></li><li><p>编译gtest</p></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">cd googletest</span><br><span class="line">mkdir build</span><br><span class="line">cmake ..</span><br><span class="line">make</span><br><span class="line">```   </span><br><span class="line"></span><br><span class="line">此时已经生成了静态库在 build/lib 下面。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3. 调整gtest的位置</span><br><span class="line"></span><br><span class="line">将头文件和库文件放到合适的地方</span><br><span class="line">比如创建文件夹 `gtest/lib` 和 `gtest/include`</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">4. 将gtest编译到我们的项目中</span><br><span class="line"></span><br><span class="line">```cmake</span><br><span class="line">option(USE_GTEST "Compile demo with GTest." OFF)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if (USE_GTEST)</span><br><span class="line">  include_directories("$&#123;GTEST_PATH&#125;include")</span><br><span class="line">  link_directories("$&#123;GTEST_PATH&#125;lib")</span><br><span class="line">endif()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">set(DEPS $&#123;DEPS&#125; gtest)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">add_executable($</span>&#123;DEMO_NAME&#125; $&#123;DEMO_NAME&#125;.cc)</span><br><span class="line"><span class="meta">target_link_libraries($</span>&#123;DEMO_NAME&#125; $&#123;DEPS&#125;)</span><br></pre></td></tr></table></figure><p>主要就是 <code>include_directories</code>, <code>link_directories</code>, <code>target_link_libraries</code> 三连，之后就可以愉快的使用了</p><h2 id="安装GTest（Windows）"><a href="#安装GTest（Windows）" class="headerlink" title="安装GTest（Windows）"></a>安装GTest（Windows）</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// TODO</span></span><br></pre></td></tr></table></figure><p>参考链接：</p><ol><li><a href="https://www.cnblogs.com/helloworldcode/p/9606838.html" target="_blank" rel="noopener">GTest的安装与使用</a></li></ol>]]></content>
      
      <categories>
          
          <category> C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Markdown常用语法（一）</title>
      <link href="/2019/01/17/Markdown%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2019/01/17/Markdown%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>Markdown 的相关常用命令<br><a id="more"></a></p><h1 id="Markdown-常用语法（一）"><a href="#Markdown-常用语法（一）" class="headerlink" title="Markdown 常用语法（一）"></a>Markdown 常用语法（一）</h1><h2 id="插入命令"><a href="#插入命令" class="headerlink" title="插入命令"></a>插入命令</h2><p>常用的 Markdown的插入命令</p><h3 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">插入图片的名字</span>](<span class="link">图片的链接</span>)</span><br></pre></td></tr></table></figure><p>但是上面这个方式无法选择图片显示的位置，和选择图片的大小。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img width = &quot;100&quot; height =&apos;90&apos; src=&quot;图片的链接&quot;/&gt;</span><br></pre></td></tr></table></figure><p>这个代码可以修改图片的大小。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div align=center&gt;&lt;img width = &quot;100&quot; height =&apos;90&apos; src=&quot;图片的链接&quot;/&gt;&lt;div&gt;</span><br><span class="line"></span><br><span class="line">&lt;div align=left&gt;&lt;img width = &quot;100&quot; height =&apos;90&apos; src=&quot;图片的链接&quot;/&gt;&lt;div&gt;</span><br><span class="line"></span><br><span class="line">&lt;div align=right&gt;&lt;img width = &quot;100&quot; height =&apos;90&apos; src=&quot;图片的链接&quot;/&gt;&lt;div&gt;</span><br></pre></td></tr></table></figure><p>这个代码可以修改图片的位置。</p><p><div align="center"><img width="100" height="90" src="http://q02h94bw5.bkt.clouddn.com/瑞士的雪.JPG"><div></div></div></p><h3 id="插入视频"><a href="#插入视频" class="headerlink" title="插入视频"></a>插入视频</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;video src=&quot;https://www.bilibili.com/video/av2271112&quot; width=&quot;320&quot; height=&quot;180&quot;</span><br><span class="line"> controls=&quot;controls&quot;&gt;&lt;/video&gt;</span><br></pre></td></tr></table></figure><video src="https://www.bilibili.com/video/av2271112" width="320" height="180" controls="controls"></video><p>上面的代码可以插入视频，这个视频是雷总的著名歌曲。</p><h3 id="插入音乐"><a href="#插入音乐" class="headerlink" title="插入音乐"></a>插入音乐</h3><p>Markdown支持插入 在线音乐的外链，网易云音乐是可以的。</p><p>参考: <a href="https://www.oschina.net/question/866260_2247433?sort=default" target="_blank" rel="noopener">markdown插入网易云音乐</a></p><h3 id="插入公式"><a href="#插入公式" class="headerlink" title="插入公式"></a>插入公式</h3><p>Markdown插入公式的操作比较简单，将latex格式的公式放在”$”里面就可以了</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$$L<span class="emphasis">_\theta(x)=\prod^m_</span>&#123;i=1&#125;h<span class="emphasis">_\theta(x^i;\theta)^&#123;yi&#125; \cdot (1-h_</span>\theta(x^i;\theta))^&#123;1-y^i&#125;$$</span><br></pre></td></tr></table></figure><p>$$L_\theta(x)=\prod^m_{i=1}h_\theta(x^i;\theta)^{yi} \cdot (1-h_\theta(x^i;\theta))^{1-y^i}$$</p><h3 id="插入表格"><a href="#插入表格" class="headerlink" title="插入表格"></a>插入表格</h3><p>表格的插入操作也比较简单，但是Markdown貌似不支持合并单元格。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">| Student | Class | Age | Gender |</span><br><span class="line">| --- | --- | --- | --- |</span><br><span class="line">| Oliver | A | 19 | M |</span><br><span class="line">| Allie | A | 18 | F |</span><br><span class="line">| Lee | B | 20 | M |</span><br><span class="line">| Jerry | A | 19 | M |</span><br><span class="line">| Frank | B | 18 | F |</span><br></pre></td></tr></table></figure><table><thead><tr><th>Student</th><th>Class</th><th>Age</th><th>Gender</th></tr></thead><tbody><tr><td>Oliver</td><td>A</td><td>19</td><td>M</td></tr><tr><td>Allie</td><td>A</td><td>18</td><td>F</td></tr><tr><td>Lee</td><td>B</td><td>20</td><td>M</td></tr><tr><td>Jerry</td><td>A</td><td>19</td><td>M</td></tr><tr><td>Frank</td><td>B</td><td>18</td><td>F</td></tr></tbody></table>]]></content>
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Jupyter添加新kernel(Mac)</title>
      <link href="/2018/12/15/Jupyter%E6%B7%BB%E5%8A%A0%E6%96%B0kernel-Mac/"/>
      <url>/2018/12/15/Jupyter%E6%B7%BB%E5%8A%A0%E6%96%B0kernel-Mac/</url>
      <content type="html"><![CDATA[<p>在 Anaconda中创建了新的虚拟环境，但是在Jupyter Notebook或者Jupyter lab里却看不见，然后以下是解决办法。</p><a id="more"></a> <h2 id="创建虚拟环境"><a href="#创建虚拟环境" class="headerlink" title="创建虚拟环境"></a>创建虚拟环境</h2><p>首先打开 Terminal界面，创建新环境 “”new_env_”</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ conda create -n new_env</span><br></pre></td></tr></table></figure><p>查询当前 conda包含的虚拟环境</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ conda env list</span><br></pre></td></tr></table></figure><p>变更当前环境至指定虚拟环境</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ source activate new_env</span><br></pre></td></tr></table></figure><h2 id="将虚拟环境添加到Jupyter"><a href="#将虚拟环境添加到Jupyter" class="headerlink" title="将虚拟环境添加到Jupyter"></a>将虚拟环境添加到Jupyter</h2><p>在Terminal里首先需要切换到需要添加的环境中，然后输入以下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ python -m ipykernel install --name new_env</span><br></pre></td></tr></table></figure><ol><li><p>此时如果 提示缺失 ipykernel，则返回 conda进行安装。</p></li><li><p>如果 提示缺失权限，则 添加 sudo 然后输入密码则可以完成添加。</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo python -m ipykernel install --name new_env</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> Python </tag>
            
            <tag> Jupyter Notebook </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hexo常用命令（一）</title>
      <link href="/2018/12/15/Hexo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A41/"/>
      <url>/2018/12/15/Hexo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A41/</url>
      <content type="html"><![CDATA[<p>Hexo 的相关常用命令<br><a id="more"></a></p><h1 id="Hexo-常用命令（一）"><a href="#Hexo-常用命令（一）" class="headerlink" title="Hexo 常用命令（一）"></a>Hexo 常用命令（一）</h1><h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><p>常用的 hexo简写命令</p><p><code>hexo new draft &quot;new draft&quot;</code> #创建草稿</p><p><code>hexo publish [layout] &lt;filename&gt;</code> #将草稿升级为文章</p><p><code>hexo n &quot;new_post&quot;</code>==<code>hexo new &quot;new_post&quot;</code> #直接创建文章</p><p><code>hexo p</code>==<code>hexo publish</code>  #发布文章，将草稿升级为文章</p><p><code>hexo g</code>==<code>hexo generate</code> #生成</p><p><code>hexo s</code>==<code>hexo server</code> #在本地服务器预览，可修改localhost端口<br><code>hexo d</code>==<code>hexo deploy</code> #部署到远端服务器</p><p><code>hexo clean</code> #清除本地文件</p>]]></content>
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hadoop(3.0.3)安装和配置过程（Mac）</title>
      <link href="/2018/06/23/Hadoop%E9%85%8D%E7%BD%AE%E6%B5%81%E7%A8%8B/"/>
      <url>/2018/06/23/Hadoop%E9%85%8D%E7%BD%AE%E6%B5%81%E7%A8%8B/</url>
      <content type="html"><![CDATA[<p>最近想研究一下分布式计算工具，于是瞄上了Hadoop，在网上找了很多教程，但还是遇到了一些问题，在这里就我记录一下遇到的问题。<br>版本是 Hadoop(3.0.3)</p><h1 id="Hadoop-3-0-3"><a href="#Hadoop-3-0-3" class="headerlink" title="Hadoop(3.0.3)"></a>Hadoop(3.0.3)</h1><a id="more"></a><h2 id="Java环境检查"><a href="#Java环境检查" class="headerlink" title="Java环境检查"></a>Java环境检查</h2><h3 id="Java版本号检查"><a href="#Java版本号检查" class="headerlink" title="Java版本号检查"></a>Java版本号检查</h3><p>在terminal里输入如下指令可以查看Java版本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ java -version</span><br></pre></td></tr></table></figure></p><p>如果Java已经是安装好了的话，就会出现如下的信息，里面的版本号可能会不一样</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ java -version</span><br><span class="line">java version &quot;1.8.0_161&quot;</span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_161-b12)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.161-b12, mixed mode)</span><br></pre></td></tr></table></figure><h3 id="Java安装"><a href="#Java安装" class="headerlink" title="Java安装"></a>Java安装</h3><p>如果你没有Java，在这网址里可以安装<br><a href="https://www.java.com/zh_CN/" target="_blank" rel="noopener">Java安装网址</a><br>JDK的安装就搜索一下就有</p><h3 id="Java的的系统环境变量"><a href="#Java的的系统环境变量" class="headerlink" title="Java的的系统环境变量"></a>Java的的系统环境变量</h3><p>Java的系统环境变量是如下指令查询的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ /usr/libexec/java_home</span><br></pre></td></tr></table></figure></p><p>查询成功会反馈类似的路径<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/Library/Java/JavaVirtualMachines/jdk1.8.0_161.jdk/Contents/Home</span><br></pre></td></tr></table></figure></p><p>该路径一会配置环境变量会用得上</p><h2 id="Hadoop下载"><a href="#Hadoop下载" class="headerlink" title="Hadoop下载"></a>Hadoop下载</h2><p><a href="http://hadoop.apache.org/releases.html" target="_blank" rel="noopener">Hadoop下载链接</a><br>我是在这里下载的3.0.3版本号。和之前2.x的版本有些许不一样。然后我是下载的编译好的binary版本。<br><a href="http://www.apache.org/dyn/closer.cgi/hadoop/common/hadoop-3.0.3/hadoop-3.0.3.tar.gz" target="_blank" rel="noopener">Hadoop3.0.3下载链接</a><br>进来之后任意选择镜像下载就可以了。</p><p>然后把解压后的文件夹hadoop-3.0.3存放到一个路径，比如我就把该文件夹放在documents下面。路径如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/Users/Oliver/Documents/hadoop-3.0.3</span><br></pre></td></tr></table></figure></p><h2 id="配置Mac-os环境"><a href="#配置Mac-os环境" class="headerlink" title="配置Mac os环境"></a>配置Mac os环境</h2><h3 id="SSH"><a href="#SSH" class="headerlink" title="SSH"></a>SSH</h3><p>这里就是我遇到问题最奇怪的地方</p><p>按照别人讲的教程大概有如下三种方法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh localhost</span><br></pre></td></tr></table></figure></p><p>然后查看是否登陆成功,登陆成功讯息如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ ssh localhost</span><br><span class="line">MBP:hadoop-3.0.3 Oliver$ ssh localhost</span><br><span class="line">Last login: Sat Jun 23 10:42:58 2018</span><br></pre></td></tr></table></figure></p><p>如果这里不是直接输出如上讯息，那么看是否需要输入密码，就根据提示一步一步来。<br>如果还是不成功，那么看如下方法</p><h4 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h4><blockquote><p>打开系统偏好设置</p><blockquote><p>–&gt; 共享<br>–&gt; 勾选远程登录<br>–&gt; 设置允许访问：所有用户</p></blockquote></blockquote><p>然后再次在terminal里输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh localhost</span><br></pre></td></tr></table></figure></p><p>参考网址：<a href="https://www.jianshu.com/p/de7eb61c983a" target="_blank" rel="noopener">Mac 系统安装Hadoop 2.7.3</a><br>参考网址：<a href="http://zhongyaonan.com/hadoop-tutorial/setting-up-hadoop-2-6-on-mac-osx-yosemite.html" target="_blank" rel="noopener">Setting up Hadoop 2.6 on Mac OS X Yosemite</a></p><p>如果以上方法不成功</p><h4 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h4><p>生成一个ssh key并储存和拷贝，方法比较笨</p><hr><ol><li><p>先输入如下指令，生成ssh key</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen</span><br></pre></td></tr></table></figure><p> 然后会提示将该key储存在哪里，这个路径就随意设置,比如我就储存在hadoop文件夹内</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/Users/Oliver/Documents/hadoop-3.0.3/sshkey/id_rsa</span><br></pre></td></tr></table></figure><p> 其中id_rsa就是我们要的文件。</p></li></ol><hr><ol start="2"><li><p>键入如下指令</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /Users/Oliver/Documents/hadoop-3.0.3/sshkey/id_rsa.pub .ssh/authorized_keys</span><br></pre></td></tr></table></figure><p> 其中路径要和我们储存key的路径一致。这是为了拷贝新生成的public key</p></li></ol><hr><ol start="3"><li><p>最后我们再试着输入</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh localhost</span><br></pre></td></tr></table></figure><p> 此时应该就可以成功了</p></li></ol><hr><p>参考网址：<a href="https://stackoverflow.com/questions/15211848/hadoop-start-dfs-sh-permission-denied" target="_blank" rel="noopener">Hadoop: start-dfs.sh permission denied</a></p><h4 id="方法三"><a href="#方法三" class="headerlink" title="方法三"></a>方法三</h4><p>此方法还未经过验证（未完成）</p><h3 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><h4 id="总环境变量配置"><a href="#总环境变量配置" class="headerlink" title="总环境变量配置"></a>总环境变量配置</h4><p>打开terminal</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ touch ~/.bash_profile</span><br><span class="line">$ vim ~/.bash_profile</span><br></pre></td></tr></table></figure><p>执行以上代码可以进入Vim编辑器，编辑环境变量。<br>添加如下代码<br>键入 i 可以开始编辑（详情可以搜索Vim的命令）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Hadoop</span><br><span class="line">export HADOOP_HOME=/Users/Oliver/Documents/hadoop-3.0.3(这个是Hadoop distribution的路径，根据自己设定的来调)</span><br><span class="line">export PATH=$PATH:$HADOOP_HOME/bin</span><br></pre></td></tr></table></figure></p><p>然后保存再退出，以下是部分Vim的指令，其余指令可以自行搜索一下</p><table><thead><tr><th>命令</th><th>简单说明</th></tr></thead><tbody><tr><td>:w</td><td>保存编辑后的文件内容，但不退出vim编辑器</td></tr><tr><td>:wq</td><td>保存文件内容后退出vim编辑器</td></tr><tr><td>:q</td><td>在未做任何编辑处理而准备退出vim时，可以使用此命令</td></tr></tbody></table><p>退出Vim界面之后，在terminal里输入如下命令使变量立即生效<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ source ~/.bash_profile</span><br></pre></td></tr></table></figure></p><p>我们就成功的配置好了Hadoop<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hadoop version</span><br></pre></td></tr></table></figure></p><p>用该语句来确认Hadoop配置,此时可以查看</p><h4 id="Hadoop文件配置"><a href="#Hadoop文件配置" class="headerlink" title="Hadoop文件配置"></a>Hadoop文件配置</h4><p>打开如下路径里的文件进行更改, 将代码复制进去</p><ol><li><p>etc/hadoop/core-site.xml:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;fs.defaultFS&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;hdfs://localhost:9000&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure></li><li><p>etc/hadoop/hdfs-site.xml:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;dfs.replication&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;1&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure></li><li><p>etc/hadoop/mapred-site.xml:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;mapreduce.framework.name&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;yarn&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure></li><li><p>etc/hadoop/yarn-site.xml:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;mapreduce_shuffle&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure><p> 参考网址：<a href="http://zhongyaonan.com/hadoop-tutorial/setting-up-hadoop-2-6-on-mac-osx-yosemite.html" target="_blank" rel="noopener">Setting up Hadoop 2.6 on Mac OS X Yosemite</a></p></li></ol><ol start="5"><li><p>/etc/hadoop/hadoop-env.sh handoop环境<br>添加这段代码就可以了，注意就是Java的系统环境变量的路径</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_161.jdk/Contents/Home</span><br></pre></td></tr></table></figure><p> 可以看到前面一开始提到的用如下指令查询</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ /usr/libexec/java_home</span><br></pre></td></tr></table></figure></li></ol><h3 id="执行-start-hdfs-and-yarn"><a href="#执行-start-hdfs-and-yarn" class="headerlink" title="执行 start hdfs and yarn"></a>执行 start hdfs and yarn</h3><ol><li><p>在terminal里进入hadoop distribution的文件夹</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd 到hadoop的文件夹，比如下面路径就是我的Hadoop</span><br><span class="line">$ cd /users/Oliver/documents/hadoop-3.0.3/</span><br></pre></td></tr></table></figure></li><li><p>对Namenode执行格式化操作 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hadoop namenode -format</span><br></pre></td></tr></table></figure></li><li><p>启动hadoop</p><p> 启动NameNode和DataNode</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sbin/start-dfs.sh</span><br></pre></td></tr></table></figure><p> 成功后出现</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Starting namenodes on [localhost]</span><br><span class="line">Starting datanodes</span><br><span class="line">Starting secondary namenodes [xiaohuobandeMBP.local]</span><br></pre></td></tr></table></figure><p> 启动ResourceManager和NodeManager</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sbin/start-yarn.sh</span><br></pre></td></tr></table></figure><p> 成功后出现</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Starting resourcemanager</span><br><span class="line">Starting nodemanagers</span><br></pre></td></tr></table></figure></li><li><p>检查hadoop是否启动成功</p><p> 在terminal里输入</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ jps</span><br></pre></td></tr></table></figure><p> 会显示</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">18739 Jps</span><br><span class="line">18133 NameNode</span><br><span class="line">18375 SecondaryNameNode</span><br><span class="line">18568 ResourceManager</span><br><span class="line">18665 NodeManager</span><br></pre></td></tr></table></figure><p> 则表示启动成功。<br> 此时在浏览器中访问localhost:8088和localhost:9870(hadoop3.x版本)，可以看到Hadoop的界面<br> localhost:50070(Hadoop2.x版本)</p></li></ol><p><img src="http://q02h94bw5.bkt.clouddn.com/hadoop_1.png" alt="hadoop界面"><br><img src="http://q02h94bw5.bkt.clouddn.com/hadoop界面2.png" alt="hadoop界面2"></p><hr><p>到此为止，Hadoop就已经完成配置了，接下来就是使用Hadoop了</p>]]></content>
      
      <categories>
          
          <category> 机器学习和数据挖掘 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
            <tag> 数据挖掘 </tag>
            
            <tag> 分布式计算 </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hexo deploy问题</title>
      <link href="/2018/06/22/hexo-deploy%E9%97%AE%E9%A2%98/"/>
      <url>/2018/06/22/hexo-deploy%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<p>Hexo deploy的问题<br><a id="more"></a><br>一开始deploy成功之后，再重新deploy的时候，会发现并没有推送本地的文件到GitHub</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">INFO  Deploying: git</span><br><span class="line">INFO  Clearing .deploy_git folder...</span><br><span class="line">INFO  Copying files from public folder...</span><br><span class="line">INFO  Copying files from extend dirs...</span><br><span class="line">On branch master</span><br><span class="line">nothing to commit, working tree clean</span><br><span class="line">To github.com:OliverLPH/OliverLPH.github.io</span><br><span class="line"> + a8ea0df...bc3e952 HEAD -&gt; master (forced update)</span><br><span class="line">Branch &apos;master&apos; set up to track remote branch &apos;master&apos; from &apos;git@github.com:OliverLPH/OliverLPH.github.io&apos;.</span><br><span class="line">INFO  Deploy done: git</span><br><span class="line">xiaohuobandeMBP:source Oliver$ hexo clean</span><br><span class="line">INFO  Deleted database.</span><br><span class="line">INFO  Deleted public folder.</span><br></pre></td></tr></table></figure><p>然后如上面的代码所示，hexo显示nothing to commit, working tree clean。</p><p>在网上搜索后发现有的几种方案</p><h3 id="方案一"><a href="#方案一" class="headerlink" title="方案一"></a>方案一</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>这样就可以清理掉public文件夹，然后重新deploy</p><h3 id="方案二"><a href="#方案二" class="headerlink" title="方案二"></a>方案二</h3><p>移除.deploy文件夹<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rm -rf .deploy</span><br><span class="line">hexo generater</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> Hello World! </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 初次使用 </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello World！</title>
      <link href="/2018/06/22/hello-world/"/>
      <url>/2018/06/22/hello-world/</url>
      <content type="html"><![CDATA[<p>Hello World!<br><a id="more"></a><br>终于把个人博客弄好的，菜鸟真是不容易。<br>还是要感谢一下网上的各路大神，都是借鉴了大家的攻略才终于弄好的。</p><h3 id="参考网站"><a href="#参考网站" class="headerlink" title="参考网站"></a>参考网站</h3><p>Hexo主题来源: <a href="https://github.com/iissnan/hexo-theme-next/blob/master/README.cn.md" target="_blank" rel="noopener">Next主题</a><br>Hexo配置参考1: <a href="https://baoyuzhang.github.io/2017/05/12/【Hexo搭建独立博客全纪录】（三）使用Hexo搭建博客/" target="_blank" rel="noopener">Hexo搭建独立博客全纪录</a><br>Hexo配置参考2: <a href="https://hexo.io/zh-cn/docs/deployment.html" target="_blank" rel="noopener">Hexo官方文档</a><br>Hexo配置参考3: <a href="http://oyjt.github.io/2016/01/16/hexo博客更换主题/" target="_blank" rel="noopener">hexo博客更换主题</a></p>]]></content>
      
      <categories>
          
          <category> Hello World! </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 初次使用 </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
